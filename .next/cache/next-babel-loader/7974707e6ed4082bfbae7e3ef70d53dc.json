{"ast":null,"code":"var _jsxFileName = \"/home/vscode/code/next-boiler/components/viewError/index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components';\n/*\n  A generic error component which will fill the space of any container its placed in.\n  It requires a heading and subheading to be used to inform the error about why this error is being shown.\n  It receives optional props that can help fix a user's problem or nudge them towards resolution:\n  - clearStorage: if this prop is present, we will clear the local storage on the client which will then prompt them to re-login on the next page load.\n  - refresh: if this prop is present, we will show a button that the user can click to refresh the view. This will most often be used in conjunction with clearStorage\n  - children: the error component can receive any other miscellaneous children in order to customize the error view based on the context it's in\n*/\n// NOTE: some of these styles are not inherited from ThemeProvider\n// because it's an Error Page and is loaded standalone\n\nconst FillSpaceError = styled.div.withConfig({\n  displayName: \"viewError__FillSpaceError\",\n  componentId: \"sc-1d1wvio-0\"\n})([\"font-family:BlinkMacSystemFont,'Muli','Segoe UI',Helvetica,Arial,sans-serif;display:flex;flex:auto;background:white;justify-content:center;align-items:center;flex-direction:column;align-self:stretch;text-align:center;background-color:#f8f8f8;padding:\", \";border-radius:12px;\"], props => props.small ? '16px 12px' : '32px 24px');\nconst Heading = styled.h3.withConfig({\n  displayName: \"viewError__Heading\",\n  componentId: \"sc-1d1wvio-1\"\n})([\"font-size:\", \";font-weight:\", \";color:#454f63;max-width:600px;margin-bottom:8px;\"], props => props.small ? '18px' : '24px', props => props.small ? '500' : '600');\nconst Subheading = styled.h4.withConfig({\n  displayName: \"viewError__Subheading\",\n  componentId: \"sc-1d1wvio-2\"\n})([\"font-size:\", \";font-weight:\", \";line-height:1.4;color:#828c99;max-width:540px;margin-bottom:\", \";\"], props => props.small ? '14px' : '18px', props => props.small ? '400' : '500', props => props.small ? '16px' : '32px');\nconst StyledImgContainer = styled.div.withConfig({\n  displayName: \"viewError__StyledImgContainer\",\n  componentId: \"sc-1d1wvio-3\"\n})([\"background-color:#0176ff;padding:40px;margin-bottom:10px;border-radius:8px;svg{width:250px;}@media (max-width:768px){padding:20px;}\"]);\nconst ButtonContainer = styled.div.withConfig({\n  displayName: \"viewError__ButtonContainer\",\n  componentId: \"sc-1d1wvio-4\"\n})([\"display:flex;flex-direction:column;> button{margin:12px;}\"]);\nconst StyledImg = styled.img.withConfig({\n  displayName: \"viewError__StyledImg\",\n  componentId: \"sc-1d1wvio-5\"\n})([\"width:300px;\"]);\nexport default (props => {\n  const {\n    clearStorage,\n    heading,\n    subheading,\n    refresh,\n    backHome,\n    type,\n    children,\n    small,\n    dataCy\n  } = props;\n  const head = heading || 'We could all use a refresh.';\n  const subhead = subheading || 'Refresh this page to try again.';\n  return __jsx(FillSpaceError, {\n    small: small,\n    \"data-cy\": dataCy,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, __jsx(Heading, {\n    small: small,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, head), __jsx(Subheading, {\n    small: small,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, subhead), __jsx(ButtonContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, refresh && __jsx(\"button\", {\n    onClick: () => window.location.reload(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Refresh the page\"), backHome && // @ts-ignore\n  __jsx(\"button\", {\n    onClick: () => window.location = '/',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Take me home\")), children);\n});","map":{"version":3,"sources":["/home/vscode/code/next-boiler/components/viewError/index.tsx"],"names":["React","styled","FillSpaceError","div","props","small","Heading","h3","Subheading","h4","StyledImgContainer","ButtonContainer","StyledImg","img","clearStorage","heading","subheading","refresh","backHome","type","children","dataCy","head","subhead","window","location","reload"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA;;;;;;;;AASA;AACA;;AACA,MAAMC,cAAc,GAAGD,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,2RAWPC,KAAK,IAAKA,KAAK,CAACC,KAAN,GAAc,WAAd,GAA4B,WAX/B,CAApB;AAeA,MAAMC,OAAO,GAAGL,MAAM,CAACM,EAAV;AAAA;AAAA;AAAA,yFACEH,KAAK,IAAKA,KAAK,CAACC,KAAN,GAAc,MAAd,GAAuB,MADnC,EAEID,KAAK,IAAKA,KAAK,CAACC,KAAN,GAAc,KAAd,GAAsB,KAFpC,CAAb;AAQA,MAAMG,UAAU,GAAGP,MAAM,CAACQ,EAAV;AAAA;AAAA;AAAA,0GACDL,KAAK,IAAKA,KAAK,CAACC,KAAN,GAAc,MAAd,GAAuB,MADhC,EAECD,KAAK,IAAKA,KAAK,CAACC,KAAN,GAAc,KAAd,GAAsB,KAFjC,EAMGD,KAAK,IAAKA,KAAK,CAACC,KAAN,GAAc,MAAd,GAAuB,MANpC,CAAhB;AASA,MAAMK,kBAAkB,GAAGT,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,2IAAxB;AAaA,MAAMQ,eAAe,GAAGV,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,iEAArB;AAQA,MAAMS,SAAS,GAAGX,MAAM,CAACY,GAAV;AAAA;AAAA;AAAA,oBAAf;AAgBA,gBAAgBT,KAAD,IAA+B;AAC5C,QAAM;AACJU,IAAAA,YADI;AAEJC,IAAAA,OAFI;AAGJC,IAAAA,UAHI;AAIJC,IAAAA,OAJI;AAKJC,IAAAA,QALI;AAMJC,IAAAA,IANI;AAOJC,IAAAA,QAPI;AAQJf,IAAAA,KARI;AASJgB,IAAAA;AATI,MAUFjB,KAVJ;AAYA,QAAMkB,IAAI,GAAGP,OAAO,IAAI,6BAAxB;AACA,QAAMQ,OAAO,GAAGP,UAAU,IAAI,iCAA9B;AAEA,SACE,MAAC,cAAD;AAAgB,IAAA,KAAK,EAAEX,KAAvB;AAA8B,eAASgB,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAS,IAAA,KAAK,EAAEhB,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBiB,IAAxB,CADF,EAEE,MAAC,UAAD;AAAY,IAAA,KAAK,EAAEjB,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BkB,OAA3B,CAFF,EAIE,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,OAAO,IAAI;AAAQ,IAAA,OAAO,EAAE,MAAMO,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,IAAvB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADd,EAGGR,QAAQ,IACP;AACA;AAAQ,IAAA,OAAO,EAAE,MAAOM,MAAM,CAACC,QAAP,GAAkB,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,CAJF,EAYGL,QAZH,CADF;AAgBD,CAhCD","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\n/*\n  A generic error component which will fill the space of any container its placed in.\n  It requires a heading and subheading to be used to inform the error about why this error is being shown.\n  It receives optional props that can help fix a user's problem or nudge them towards resolution:\n  - clearStorage: if this prop is present, we will clear the local storage on the client which will then prompt them to re-login on the next page load.\n  - refresh: if this prop is present, we will show a button that the user can click to refresh the view. This will most often be used in conjunction with clearStorage\n  - children: the error component can receive any other miscellaneous children in order to customize the error view based on the context it's in\n*/\n\n// NOTE: some of these styles are not inherited from ThemeProvider\n// because it's an Error Page and is loaded standalone\nconst FillSpaceError = styled.div<{ small?: boolean }>`\n  font-family: BlinkMacSystemFont, 'Muli', 'Segoe UI', Helvetica, Arial, sans-serif;\n  display: flex;\n  flex: auto;\n  background: white;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  align-self: stretch;\n  text-align: center;\n  background-color: #f8f8f8;\n  padding: ${props => (props.small ? '16px 12px' : '32px 24px')};\n  border-radius: 12px;\n`;\n\nconst Heading = styled.h3<{ small?: boolean }>`\n  font-size: ${props => (props.small ? '18px' : '24px')};\n  font-weight: ${props => (props.small ? '500' : '600')};\n  color: #454f63;\n  max-width: 600px;\n  margin-bottom: 8px;\n`;\n\nconst Subheading = styled.h4<{ small?: boolean }>`\n  font-size: ${props => (props.small ? '14px' : '18px')};\n  font-weight: ${props => (props.small ? '400' : '500')};\n  line-height: 1.4;\n  color: #828c99;\n  max-width: 540px;\n  margin-bottom: ${props => (props.small ? '16px' : '32px')};\n`;\n\nconst StyledImgContainer = styled.div`\n  background-color: #0176ff;\n  padding: 40px;\n  margin-bottom: 10px;\n  border-radius: 8px;\n  svg {\n    width: 250px;\n  }\n  @media (max-width: 768px) {\n    padding: 20px;\n  }\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  > button {\n    margin: 12px;\n  }\n`;\n\nconst StyledImg = styled.img`\n  width: 300px;\n`;\n\ninterface Props {\n  type?: string;\n  heading?: string;\n  subheading?: string;\n  clearStorage?: boolean;\n  refresh?: boolean;\n  backHome?: boolean;\n  children?: JSX.Element;\n  small?: boolean;\n  dataCy?: string;\n}\n\nexport default (props: Props): JSX.Element => {\n  const {\n    clearStorage,\n    heading,\n    subheading,\n    refresh,\n    backHome,\n    type,\n    children,\n    small,\n    dataCy,\n  } = props;\n\n  const head = heading || 'We could all use a refresh.';\n  const subhead = subheading || 'Refresh this page to try again.';\n\n  return (\n    <FillSpaceError small={small} data-cy={dataCy}>\n      <Heading small={small}>{head}</Heading>\n      <Subheading small={small}>{subhead}</Subheading>\n\n      <ButtonContainer>\n        {refresh && <button onClick={() => window.location.reload(true)}>Refresh the page</button>}\n\n        {backHome && (\n          // @ts-ignore\n          <button onClick={() => (window.location = '/')}>Take me home</button>\n        )}\n      </ButtonContainer>\n      {children}\n    </FillSpaceError>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}