{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/vscode/code/next-boiler/components/error/ErrorBoundary.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport BlueScreen from '.';\nexport default class ErrorBoundary extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      error: null\n    });\n\n    _defineProperty(this, \"componentDidCatch\", (error, errorInfo) => {\n      this.setState({\n        error\n      }); // @ts-ignore\n      // tslint:disable-next-line:no-unused-expression\n\n      window.Raven && window.Raven.captureException(error, {\n        extra: errorInfo\n      });\n    });\n  }\n\n  render() {\n    const {\n      error\n    } = this.state;\n    const {\n      fallbackComponent: FallbackComponent,\n      children\n    } = this.props;\n\n    if (error) {\n      if (this.props.fallbackComponent) {\n        return __jsx(FallbackComponent, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        });\n      }\n\n      if (this.props.fallbackComponent === null) {\n        return null;\n      }\n\n      return __jsx(BlueScreen, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      });\n    }\n\n    return children;\n  }\n\n}","map":{"version":3,"sources":["/home/vscode/code/next-boiler/components/error/ErrorBoundary.tsx"],"names":["React","BlueScreen","ErrorBoundary","Component","error","errorInfo","setState","window","Raven","captureException","extra","render","state","fallbackComponent","FallbackComponent","children","props"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,GAAvB;AAWA,eAAe,MAAMC,aAAN,SAA4BF,KAAK,CAACG,SAAlC,CAA0D;AAAA;AAAA;;AAAA,mCACxD;AAAEC,MAAAA,KAAK,EAAE;AAAT,KADwD;;AAAA,+CAG5C,CAACA,KAAD,EAAaC,SAAb,KAAgC;AACzD,WAAKC,QAAL,CAAc;AAAEF,QAAAA;AAAF,OAAd,EADyD,CAEzD;AACA;;AACAG,MAAAA,MAAM,CAACC,KAAP,IAAgBD,MAAM,CAACC,KAAP,CAAaC,gBAAb,CAA8BL,KAA9B,EAAqC;AAAEM,QAAAA,KAAK,EAAEL;AAAT,OAArC,CAAhB;AACD,KARsE;AAAA;;AAUhEM,EAAAA,MAAP,GAAgB;AACd,UAAM;AAAEP,MAAAA;AAAF,QAAY,KAAKQ,KAAvB;AACA,UAAM;AAAEC,MAAAA,iBAAiB,EAAEC,iBAArB;AAAwCC,MAAAA;AAAxC,QAAqD,KAAKC,KAAhE;;AAEA,QAAIZ,KAAJ,EAAW;AACT,UAAI,KAAKY,KAAL,CAAWH,iBAAf,EAAkC;AAChC,eAAO,MAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,UAAI,KAAKG,KAAL,CAAWH,iBAAX,KAAiC,IAArC,EAA2C;AACzC,eAAO,IAAP;AACD;;AAED,aAAO,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,WAAOE,QAAP;AACD;;AA3BsE","sourcesContent":["import React from 'react';\nimport BlueScreen from '.';\n\ninterface State {\n  error: any;\n}\n\ninterface Props {\n  children: any;\n  fallbackComponent?: any;\n}\n\nexport default class ErrorBoundary extends React.Component<Props, State> {\n  public state = { error: null };\n\n  public componentDidCatch = (error: any, errorInfo: any) => {\n    this.setState({ error });\n    // @ts-ignore\n    // tslint:disable-next-line:no-unused-expression\n    window.Raven && window.Raven.captureException(error, { extra: errorInfo });\n  };\n\n  public render() {\n    const { error } = this.state;\n    const { fallbackComponent: FallbackComponent, children } = this.props;\n\n    if (error) {\n      if (this.props.fallbackComponent) {\n        return <FallbackComponent />;\n      }\n\n      if (this.props.fallbackComponent === null) {\n        return null;\n      }\n\n      return <BlueScreen />;\n    }\n\n    return children;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}